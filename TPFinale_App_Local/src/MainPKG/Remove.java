/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MainPKG;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.*;
import oracle.jdbc.OracleDriver;
import javax.swing.DefaultListModel;
/**
 *
 * @author 201329288
 */
public class Remove extends javax.swing.JFrame {

    Main_Screen main_Page = null;
    Connection conn = null;
    /**
     * Creates new form Remove
     */
    public Remove(Connection main_Conn, Main_Screen main, String title) {
        initComponents();
        jLabel1.setText("Remove-" + title);
        main_Page = main;
        conn = main_Conn;
        
        Fill_List();
    }
    public Remove() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        LB_Items = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        BTN_Remove = new javax.swing.JButton();
        BTN_Quitter = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LB_Items.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(LB_Items);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Retrait");

        BTN_Remove.setText("Retirer");
        BTN_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_RemoveActionPerformed(evt);
            }
        });

        BTN_Quitter.setText("Quitter");
        BTN_Quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_QuitterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BTN_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BTN_Quitter))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BTN_Remove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BTN_Quitter))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_QuitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_QuitterActionPerformed
        main_Page.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BTN_QuitterActionPerformed

    private void Fill_List()
    {
        if(jLabel1.getText().endsWith("Billet"))
        {
            try{
            DefaultListModel dlm = new DefaultListModel();
            String sql = "SELECT NUMBILLET, SPEC.NOMSPEC, REP.LADATE, SEC.NOMSEC FROM BILLETS B INNER JOIN REPRESENTATIONS REP ON B.NUMREP=REP.NUMREP INNER JOIN SPECTACLES SPEC ON REP.NUMSPEC=SPEC.NUMSPEC INNER JOIN SECTIONS SEC ON B.NUMSEC=SEC.NUMSEC";
            Statement stm = conn.createStatement();
            ResultSet rst = stm.executeQuery(sql);
            
            while(rst.next())
            {
                dlm.addElement("Billet pour " + rst.getString(2) + " pour la repr√©sentation de " + rst.getString(3) + " dans la section " + rst.getString(4) + "-" + rst.getInt(1));
            }
            
            stm.close();
            rst.close();
            
            LB_Items.setModel(dlm);
        }
        catch(SQLException except){          
        }
        }
        else
        {
            try{
            DefaultListModel dlm = new DefaultListModel();
            String sql = "SELECT NUMSALLE, NOMSALLE FROM SALLES";
            Statement stm = conn.createStatement();
            ResultSet rst = stm.executeQuery(sql);
            
            while(rst.next())
            {
                dlm.addElement(rst.getString(2) + "-" + rst.getInt(1));
            }
            
            stm.close();
            rst.close();
            
            LB_Items.setModel(dlm);
        }
        catch(SQLException except){          
        }
        }
    }
    private void BTN_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_RemoveActionPerformed
        if(jLabel1.getText().endsWith("Billet"))
        {
            try{
                CallableStatement Callins = conn.prepareCall("{call AMINAPP.REMOVEBILLET (?)}");
                
                Callins.setInt(1, Integer.parseInt(String.valueOf(LB_Items.getSelectedValue().toString().subSequence(LB_Items.getSelectedValue().toString().lastIndexOf("-")+1, LB_Items.getSelectedValue().toString().length()))));
                
                Callins.executeUpdate();
                Callins.clearParameters();
                Callins.close();
                Fill_List();
            }
            catch(SQLException ins)
            {
                System.out.println(ins.getMessage());
            }
        }
        else
        {
            try{
                CallableStatement Callins = conn.prepareCall("{call AMINAPP.REMOVESALLES (?)}");

                Callins.setInt(1, Integer.parseInt(String.valueOf(LB_Items.getSelectedValue().toString().subSequence(LB_Items.getSelectedValue().toString().lastIndexOf("-")+1, LB_Items.getSelectedValue().toString().length()))));
                
                Callins.executeUpdate();
                Callins.clearParameters();
                Callins.close();
                Fill_List();
            }
            catch(SQLException ins)
            {
                System.out.println(ins.getMessage());
            }
        }
    }//GEN-LAST:event_BTN_RemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Remove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Remove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Remove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Remove.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Remove().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_Quitter;
    private javax.swing.JButton BTN_Remove;
    private javax.swing.JList LB_Items;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
